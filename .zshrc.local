# Local configurations -*- mode: sh -*-

# theme
antigen theme steeef            # ys, dst, steeef, wedisagree, robbyrussell

# Powerful theme (require powerline fonts)
# antigen theme caiogondim/bullet-train.zsh

# BULLETTRAIN_PROMPT_ORDER=(status custom context dir go git cmd_exec_time)
# BULLETTRAIN_PROMPT_CHAR=""
# BULLETTRAIN_PROMPT_SEPARATE_LINE=false
# BULLETTRAIN_PROMPT_ADD_NEWLINE=false

# BULLETTRAIN_CONTEXT_DEFAULT_USER=$USER

# BULLETTRAIN_DIR_BG=black

# BULLETTRAIN_GIT_PREFIX="î‚ " # "\ue0a0"
# BULLETTRAIN_GIT_COLORIZE_DIRTY=true
# BULLETTRAIN_GIT_COLORIZE_DIRTY_BG_COLOR=red
# BULLETTRAIN_GIT_DIRTY=""
# BULLETTRAIN_GIT_CLEAN=""
# BULLETTRAIN_GIT_BG=green
# BULLETTRAIN_GIT_PROMPT_CMD="\$(custom_git_prompt)"

# custom_git_prompt () {
#     local ref
#     if [[ "$(command git config --get oh-my-zsh.hide-status 2>/dev/null)" != "1" ]]
#     then
#         ref=$(command git symbolic-ref HEAD 2> /dev/null)  || ref=$(command git rev-parse --short HEAD 2> /dev/null)  || return 0

#         if [[ ${ref#refs/heads/} == master ]]; then
#             echo "$ZSH_THEME_GIT_PROMPT_PREFIX$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX"
#         else
#             echo "$ZSH_THEME_GIT_PROMPT_PREFIX ${ref#refs/heads/}$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX"
#         fi
#     fi
# }

# antigen apply

# # Go
# prompt_go() {
#     setopt extended_glob
#     if [[ (-f *.go || -f Gopkg.toml || -d Godeps || -f glide.yaml) ]]; then
#         if command -v go > /dev/null 2>&1; then
#             prompt_segment $BULLETTRAIN_GO_BG $BULLETTRAIN_GO_FG $BULLETTRAIN_GO_PREFIX" $(go version | grep --colour=never -oE '[[:digit:]].[[:digit:]]+')"
#         fi
#     fi
# }

# plugins
# antigen bundle golang
# antigen bundle python
# antigen bundle ruby
# antigen bundle docker
# antigen bundle docker-compose
# antigen bundle docker-machine
# antigen bundle npm

# env
export TERM=xterm-256color
# export EDITOR=vim

# aliases

# functions
# function goclean() {
#     go clean -i -n $1
#     go clean -i $1
#     rm -rf $GOPATH/src/$1
#     if [ -d $GOPATH/pkg/${sysOS:l}_amd64/$1 ]; then
#         rm -rf $GOPATH/pkg/${sysOS:l}_amd64/$1;
#     fi
# }

# function goclean_test() {
#     go clean -i -n $1
#     tree -L 1 $GOPATH/src/$1
#     tree -L 1 $GOPATH/pkg/${sysOS:l}_amd64/$1
# }
